. todo
 . debugger la fonction get_pawn_position
  . elle est importante
  . il faudrait utiliser les sharps middle pour estimer l erreur
  d angle (car nous ne sommes pas forcement en face du centre du
  pion, ce qui induit des erreur)

 . attention a ne pas deplacer les pions mis sur les zones reservees

 . moveto
  . devrait poser sur les cases bonus en priorite
  . devrait shaper left et right pour detecter les pions durant
  un move

 . maintenir une liste d observations + solutions
  . on se cogne souvent en tournant, reculant
   . il faut utiliser mieux les sharps derriere, sur les cotes
  . lorsqu on tient un pion, on ne voit plus rien devant
  . la vitesse de deplacement et la frequence de sampling des
  sharps sont liees: on doit sampler au moins une fois tous les
  10 cms

 . faire le test suivant pour valider: ia seule, en combien de
 temps on converge
 . tester les fonctions d estimation de la position d un pion
  . on devrait etre capable de ne pas perdre de temps a prendre
  un pion bien place qui nous appartient

 . mieux modeliser les sharps, tester que les assumptions
 faites sont correctes. notament pour la distance min/max fiables,
 et la perte sur la distance

 . mettre en place l automate de recalage
  . si on est trop pret d un mur alors que l asserv ne le voit
  pas, ajuster la position de l asservissement

 . on devrait a tout instant savoir si reculer est safe (ie. pas
 d obstacle). si on ne sait pas, sharper

 . se deplacer a cheval sur des tiles permet de se replacer avec
 un systeme de led de couleur. normalement facilite par le fait
 que les leds sont placees sous le robot, donc pas de probleme de
 luminosite. par contre, probleme si peinture brillante (lackee).
  . il faudrait se servir de ca seulement pour apporter des legeres
  corrections a l asservissement, mais le robot devrait pouvoir
  fonctionner sans

 . path_xxx api -> on veut pouvoir rajouter des points de passage
  . actuellement, si on veut aller d un point a un autre
  tout en contournant les objets, c est difficile. A priori,
  le terrain va etre encombre et il faut profiter des deplacements
  pour remttre sur nos cases un max de pions possible

 . avant de passer dans l automat distri, il faudrait
  degager le 2 pions qui trainent (?)
 . implementer un automate de prise des pions en fonction
  de la configuration
  . implementer les configurations de test associees
 . il faudrait un master automata qui drive les autres
  . d abord distri, ensuite wander, dans wander -> taker...

 . bugs

 . devices
  . puissance des sharps
   . actuellement 10000, eq. a infini

  . container: a bot can contain some pawn
   . the clamp moves the pawn in a container of size 1 per default

  . implement switches at each corners
   . implement as sharp with a very small distance ?
   . should have an aperture in that case...
   . more simple to implement it by walking object list

  . add red blue under the robot so that the robot can continue playing even if the asserv gets lost
   . create the redblue.cc
   . implement the corresponding strategy

  . rename sensor.cc to sharp.cc

 . documentation guide
  . specifier les reperes
   . tous les reperes (local du robot...)
   . 0 degree points on the right
   . 90 degree points on the bottom 
   . (0, 0) top left corner

. features
 . state snapshot
  . snap::load, snap::store
 . implement friction ?
  . -> at least the robot should not bounce indefinitly like a ball...
  . angular velocity should be a function of velocity and wheels circumference

. programming concept
 . la programmation du robot repose sur 2 concepts
  . une strategie
  . un ensemble d automates
 . la strategie est le comportement general qu adopte le robot. les actions basiques
 de la strategie s appuient sur un ou plusieurs automates
  . description des strategies
   . pour le moment, seule une strategie floue est definie
  . description des automates
   . automate sortie de zone de depart
   . automate vidange de la zone de distribution
   . automate moveto
   . automate deplacement de pion
   . automate deplacement de tour
  . on devrait avoir un automate pour tout: turn, turn_safe...

. references
 . line intersection
  . http://alienryderflex.com/intersect/

. recording linux desktop
 . ffmpeg -f x11grab -s `xdpyinfo | grep 'dimensions:'|awk '{print $2}'` -r 25 -i :0.0 /tmp/out.mpg
